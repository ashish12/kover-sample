[versions]
sentry = "6.16.0"
logback = "1.4.7"
logstash_encoder = "7.3"
kotlin-version = "1.8.0"
kotest = "5.5.4"
mockk = "1.13.5"
ktor = "2.3.0"
kotlinx-datetime = "0.4.0"
kotlinx-uuid = "0.0.17"
kotlinx-serialization-json = "1.5.0"
kotlinx-coroutines-slf4j = "1.6.4"
java-dynamic-sqs-listener-ktor-core = "5.1.0"
jackson-databind = "2.14.2"
commons-codec = "1.15"
typesafe-config = "1.4.2"
aws_sdk = "2.20.55"
exposed = "0.41.1"
postgresql = "42.6.0"
hikaricp = "5.0.1"

[libraries]
sentry = { module = "io.sentry:sentry", version.ref = "sentry" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logback-core = { module = "ch.qos.logback:logback-core", version.ref = "logback" }
logback-access = { module = "ch.qos.logback:logback-access", version.ref = "logback" }
logstash-encoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstash_encoder" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin-version" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-assertions-json = { module = "io.kotest:kotest-assertions-json-jvm", version.ref = "kotest" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

ktor-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-server-netty-jvm = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-content-negotiation-jvm = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktor" }
ktor-server-call-id = { module = "io.ktor:ktor-server-call-id", version.ref = "ktor" }
ktor-server-compression = { module = "io.ktor:ktor-server-compression", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-double-receive-jvm = { module = "io.ktor:ktor-server-double-receive-jvm", version.ref = "ktor" }

ktor-client-core-jvm = { module = "io.ktor:ktor-client-core-jvm", version.ref = "ktor" }
ktor-client-cio-jvm = { module = "io.ktor:ktor-client-cio-jvm", version.ref = "ktor" }
ktor-client-logging-jvm = { module = "io.ktor:ktor-client-logging-jvm", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }

ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host-jvm", version.ref = "ktor" }

ktor-client-mock = { module = "io.ktor:ktor-client-mock-jvm", version.ref = "ktor" }

kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime-jvm", version.ref = "kotlinx-datetime" }
kotlinx-uuid = { module = "app.softwork:kotlinx-uuid-core-jvm", version.ref = "kotlinx-uuid" }
kotlinx-coroutines-slf4j = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-slf4j", version.ref = "kotlinx-coroutines-slf4j" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
kotlinx-uuid-exposed = { module = "app.softwork:kotlinx-uuid-exposed", version.ref = "kotlinx-uuid" }

exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-kotlin-datetime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed" }

java-dynamic-sqs-listener-ktor-core = { module = "com.jashmore:java-dynamic-sqs-listener-ktor-core", version.ref = "java-dynamic-sqs-listener-ktor-core" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson-databind" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commons-codec" }

typesafe-config = { module = "com.typesafe:config", version.ref = "typesafe-config" }

awssdk-ssm = { module = "software.amazon.awssdk:ssm", version.ref = "aws_sdk" }
awssdk-sts = { module = "software.amazon.awssdk:sts", version.ref = "aws_sdk" }
awssdk-sso = { module = "software.amazon.awssdk:sso", version.ref = "aws_sdk" }
awssdk-sqs = { module = "software.amazon.awssdk:sqs", version.ref = "aws_sdk" }
awssdk-s3 = { module = "software.amazon.awssdk:s3", version.ref = "aws_sdk" }
awssdk-sns = { module = "software.amazon.awssdk:sns", version.ref = "aws_sdk" }

postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "hikaricp" }
h2 = { module = "com.h2database:h2", version = "2.1.214" }

ktlint = { module = "com.pinterest:ktlint", version = "0.48.2" }

[bundles]
logback = ["logback-core", "logback-classic", "logback-access", "logstash-encoder"]
testlibs = ["kotlin-test", "kotest-assertions-core", "kotest-assertions-json", "mockk"]
ktor-server = ["ktor-server-core", "ktor-kotlinx-json", "ktor-server-status-pages", "ktor-server-netty-jvm", "ktor-server-call-id", "ktor-server-call-logging", "ktor-server-compression", "ktor-server-content-negotiation-jvm", "ktor-server-double-receive-jvm"]
ktor-client = ["ktor-client-core-jvm", "ktor-client-cio-jvm", "ktor-client-content-negotiation", "ktor-client-logging-jvm"]
exposed = ["exposed-core", "exposed-dao", "exposed-jdbc", "exposed-kotlin-datetime", "kotlinx-uuid-exposed", "kotlinx-uuid"]

[plugins]
